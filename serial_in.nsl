#include "serial.h"

/*
  baudclk.baud pulse must be 16 times faster than buad rate
*/
module serial_in {

 reg rxd0[8], rxd1[8], baud_cmp[3], rxdi, rxdf, bit_count[4];
 reg baud_count[3]=0, rxreadyr=0;

 proc_name rx();
 serial_clkfix baudclk;

 {
   if(!rx) rx();
   if(rxreadyr) rxready();
   rxdf := rxd;
   rxdi := rxdf;
   data = rxd1;
 }

 func baudclk.baud {
   baud_count := baud_count + 0x1;
 }

 func port_read {
   if(rxreadyr) rxreadyr := 0b0;
  }
 
 proc rx {
  state_name idle, databit, stop;
  first_state idle;

  state idle if(~rxdi) 
   {
     baudclk.sync();
     baud_cmp := baud_count ^ 3'b100;
     bit_count := 0x0;
     rxreadyr := 0b0;
     goto databit;
   }

  state databit if(baudclk.baud&(baud_count == baud_cmp))
   {
     rxd0 := {rxdi, rxd0[7:1]};
     bit_count := bit_count + 0x1;
     if(bit_count[3]) {
       goto stop;
     }
   }

  state stop if(baudclk.baud&(baud_count == baud_cmp)) {
   rxd1 := rxd0;
   rxreadyr := 0b1;
   goto idle;
   done();
   }
 }
}
