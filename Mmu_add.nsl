#include "Mmu_add.h"

module mmu_4 {
	wire       c0,c1,c2,c3;
	wire       g0,g1,g2,g3;
	wire       p0,p1,p2,p3;

	func do {
		g0 = a[0]&b[0];
		g1 = a[1]&b[1];
		g2 = a[2]&b[2];
		g3 = a[3]&b[3];
		p0 = a[0]^b[0];
		p1 = a[1]^b[1];
		p2 = a[2]^b[2];
		p3 = a[3]^b[3];
		c0 = g0|(p0&ci);
		c1 = g1|(p1&g0)|(p1&p0&ci);
		c2 = g2|(p2&g1)|(p2&p1&g0)|(p2&p1&p0&ci);
		c3 = g3|(p3&g2)|(p3&p2&g1)|(p3&p2&p1&g0)|(p3&p2&p1&p0&ci);
		out = {(p3^c2),(p2^c1),(p1^c0),(p0^ci)};
		c = c3;
		v = c2;
		z = ~(p3^c2) & ~(p2^c1) & ~(p1^c0) & ~(p0^ci);
		n = p3^c2;
		gm = g3|(p3&g2)|(p3&p2&g1)|(p3&p2&p1&g0);
		pm = p3&p2&p1&p0;
	}
}

module Mmu_add {
	mmu_4   ad1,ad0;
	wire       c3,c7;
	wire       gm0,gm1;
	wire       pm0,pm1;

	func do {
		ad1.do(a[07:04],b[07:04],c3);
		ad0.do(a[03:00],b[03:00],ci);

    out = {ad1.out,ad0.out};

		n = ad1.n;
		z =  ad1.z & ad0.z;
		v = ad1.v ^ c7;
		c = c7;

		gm0 = ad0.gm;
		gm1 = ad1.gm;
		pm0 = ad0.pm;
		pm1 = ad1.pm;

		c3 = gm0|(pm0&ci);
		c7 = gm1|(pm1&gm0)|(pm1&pm0&ci);
	}
}
